<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/dnpar/OneDrive - Rutgers University/MIS Spring 2023/FinalProject/NYCCol_Gabe_answer_key/Collision.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="1"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="5608"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,5:mainNYCOL"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="CRASH_1NF" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="96"/><column index="2" value="129"/><column index="4" value="63"/><column index="5" value="47"/><column index="6" value="61"/><column index="7" value="68"/><column index="8" value="76"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="CRASH_2NF" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="2" value="129"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Crash_0NF" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="85"/><column index="2" value="82"/><column index="4" value="61"/><column index="5" value="68"/><column index="6" value="76"/><column index="7" value="150"/><column index="8" value="243"/><column index="9" value="197"/><column index="10" value="231"/><column index="11" value="183"/><column index="12" value="174"/><column index="13" value="212"/><column index="14" value="203"/><column index="15" value="178"/><column index="16" value="169"/><column index="17" value="191"/><column index="18" value="182"/><column index="19" value="300"/><column index="20" value="207"/><column index="21" value="207"/><column index="22" value="207"/><column index="23" value="207"/><column index="24" value="96"/><column index="25" value="207"/><column index="26" value="207"/><column index="27" value="207"/><column index="28" value="207"/><column index="29" value="207"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="NYCOL" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="1" mode="1"/></sort><column_widths><column index="1" value="96"/><column index="2" value="115"/><column index="4" value="63"/><column index="5" value="47"/><column index="6" value="61"/><column index="7" value="68"/><column index="8" value="76"/><column index="9" value="79"/><column index="10" value="96"/><column index="11" value="97"/><column index="12" value="90"/><column index="13" value="89"/><column index="14" value="110"/><column index="15" value="82"/><column index="16" value="219"/><column index="17" value="147"/><column index="18" value="149"/><column index="19" value="103"/><column index="20" value="170"/><column index="21" value="209"/><column index="22" value="300"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="VEHICLE_1NF" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="82"/><column index="2" value="96"/><column index="3" value="147"/><column index="4" value="149"/><column index="5" value="103"/><column index="6" value="170"/><column index="7" value="209"/><column index="8" value="224"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="nycolcrash.sql">drop table if exists CRASH_1NF;
create table CRASH_1NF (
  COLLISION_ID INTEGER,
  CRASHDATETIME DATE,
  BOROUGH TEXT,
  COUNTY TEXT,
  STATE TEXT,
  ZIPCODE TEXT,
  LATITUDE REAL,
  LONGITUDE REAL,
  PRIMARY KEY (COLLISION_ID)
);
insert into CRASH_1NF
	select COLLISION_ID, substr(CRASHDATE,7,4)||'-'||substr(CRASHDATE,1,2)||'-'||substr(CRASHDATE,4,2)
			||' '||case when length(CRASHTIME)=4 then '0'||CRASHTIME else CRASHTIME end||':00' as CRASHDATETIME,
			BOROUGH,
			case
				when BOROUGH='BROOKLYN' then 'Kings'
				when BOROUGH='MANHATTAN' then 'New York'
				when BOROUGH='STATEN ISLAND' then 'Richmond'
				when BOROUGH = 'QUEENS' then 'Queens'
				else BOROUGH
			end as COUNTY,
			'NY' as STATE,
			ZIPCODE,
			LATITUDE,
			LONGITUDE
		from CRASH_0NF
		where CRASHDATETIME &gt;= '2019-01-01 00:00:00' and BOROUGH is not NULL
;
</sql><sql name="nycolperson.sql">drop table if exists PERSON_1NF;
create table PERSON_1NF (
  PERSON_ID INTEGER,
  COLLISION_ID INTEGER,
  PERSON_TYPE TEXT,
  PERSON_ROLE TEXT,
  PERSON_AGE INTEGER,
  PERSON_SEX TEXT,
  PERSON_INJURY TEXT,
  VEHICLE_ID INTEGER,
  SAFETY_EQUIPMENT TEXT,
  PRIMARY KEY (PERSON_ID)
);
insert into PERSON_1NF
	select UNIQUE_ID, COLLISION_ID, PERSON_TYPE,
			case when PERSON_TYPE='In-Line Skater' then 'Driver' else PED_ROLE end as PERSON_ROLE,
			case when cast(PERSON_AGE as Integer) &lt; 0 or cast(PERSON_AGE as integer)  &gt; 120 then NULL else PERSON_AGE end as PERSON_AGE,
			case when PERSON_SEX is NULL then 'U' else PERSON_SEX end as PERSON_SEX,
			PERSON_INJURY, VEHICLE_ID, SAFETY_EQUIPMENT
		from PERSON_0NF
		where PERSON_ROLE is not NULL and PERSON_ROLE not in ('Owner','Registrant','Witness','Notified Person','Other')
;
</sql><sql name="nycolvehicle.sql">drop table if exists VEHICLE_1NF;
create table VEHICLE_1NF (
  VEHICLE_ID INTEGER,
  COLLISION_ID INTEGER, 
  STATE_REGISTRATION TEXT,
  VEHICLE_CATEGORY TEXT,
  VEHICLE_YEAR INTEGER,
  DRIVER_LICENSE_STATUS TEXT,
  DRIVER_LICENSE_JURISDICTION TEXT,
  PRIMARY_CONTRIBUTING_FACTOR TEXT,
  PRIMARY KEY (VEHICLE_ID)
);


insert into VEHICLE_1NF
	select UNIQUE_ID, COLLISION_ID, STATE_REGISTRATION,VL.VEHICLE_CATEGORY, VEHICLE_YEAR, DRIVER_LICENSE_STATUS, DRIVER_LICENSE_JURISDICTION,
			case when CONTRIBUTING_FACTOR_1 is null then 'Unspecified' else CONTRIBUTING_FACTOR_1 end as PRIMARY_CONTRIBUTING_FACTOR
		from VEHICLE_0NF V INNER JOIN VEHICLE_TYPE_TO_CATEGORY VL ON V.VEHICLE_TYPE = VL.VEHICLE_TYPE
		where VL.VEHICLE_TYPE is not '0';
;
/*
DROP TABLE if EXISTS VEHICLE_1NF_vehicle_type;
create TABLE VEHICLE_1NF_vehicle_type as
select *
from VEHICLE_1NF  inner join VEHICLE_TYPE_TO_CATEGORY  on VEHICLE_1NF.VEHICLE_CATEGORY = VEHICLE_TYPE_TO_CATEGORY.VEHICLE_TYPE;
*/</sql><sql name="nycolnorm.sql">drop table if exists PERSON_2NF;
drop table if exists VEHICLE_2NF;
drop table if exists CRASH_2NF;

create table CRASH_2NF (
  COLLISION_ID INTEGER,
  CRASHDATETIME DATE,
  BOROUGH TEXT,
  COUNTY TEXT,
  STATE TEXT,
  ZIPCODE TEXT,
  LATITUDE REAL,
  LONGITUDE REAL,
  PRIMARY KEY (COLLISION_ID)
);
insert into CRASH_2NF
	select * from CRASH_1NF
;

create table VEHICLE_2NF (
  VEHICLE_ID INTEGER,
  COLLISION_ID INTEGER, 
  STATE_REGISTRATION TEXT,
  VEHICLE_CATEGORY TEXT,
  VEHICLE_YEAR INTEGER,
  DRIVER_LICENSE_STATUS TEXT,
  DRIVER_LICENSE_JURISDICTION TEXT,
  PRIMARY_CONTRIBUTING_FACTOR TEXT,
  PRIMARY KEY (VEHICLE_ID),
  FOREIGN KEY (COLLISION_ID) REFERENCES CRASH_2NF(COLLISION_ID)
);
insert into VEHICLE_2NF
	select * from VEHICLE_1NF where COLLISION_ID in (select COLLISION_ID from CRASH_2NF)
;

create table PERSON_2NF (
  PERSON_ID INTEGER,
  COLLISION_ID INTEGER,
  PERSON_TYPE TEXT,
  PERSON_ROLE TEXT,
  PERSON_AGE INTEGER,
  PERSON_SEX TEXT,
  PERSON_INJURY TEXT,
  VEHICLE_ID INTEGER,
  SAFETY_EQUIPMENT TEXT,
  PRIMARY KEY (PERSON_ID),
  FOREIGN KEY (COLLISION_ID) REFERENCES CRASH_2NF(COLLISION_ID),
  FOREIGN KEY (VEHICLE_ID) REFERENCES VEHICLE_2NF(VEHICLE_ID)
);
insert into PERSON_2NF
	select * from PERSON_1NF where COLLISION_ID in (select COLLISION_ID from CRASH_2NF) and (VEHICLE_ID is NULL or VEHICLE_ID in (select VEHICLE_ID from VEHICLE_2NF))
;
</sql><sql name="nycolmerge.sql">drop table if exists NYCOL;
create table NYCOL as
	select c.*, p.PERSON_ID, p.PERSON_TYPE, p.PERSON_ROLE, p.PERSON_AGE, p.PERSON_SEX, p.PERSON_INJURY,
			v.VEHICLE_ID, p.SAFETY_EQUIPMENT, v.STATE_REGISTRATION, v.VEHICLE_CATEGORY, v.VEHICLE_YEAR,
			v.DRIVER_LICENSE_STATUS, v.DRIVER_LICENSE_JURISDICTION, v.PRIMARY_CONTRIBUTING_FACTOR
		from CRASH_2NF c
				left join PERSON_2NF p on c.COLLISION_ID = p.COLLISION_ID
				left join VEHICLE_2NF v on c.COLLISION_ID = v.COLLISION_ID and p.VEHICLE_ID = v.VEHICLE_ID
;
select * from NYCOL;
</sql><sql name="SQL 7">select </sql><current_tab id="0"/></tab_sql></sqlb_project>

drop table if exists PERSON_2NF;
drop table if exists VEHICLE_2NF;
drop table if exists CRASH_2NF;

create table CRASH_2NF (
  COLLISION_ID INTEGER,
  CRASHDATETIME DATE,
  BOROUGH TEXT,
  COUNTY TEXT,
  STATE TEXT,
  ZIPCODE TEXT,
  LATITUDE REAL,
  LONGITUDE REAL,
  PRIMARY KEY (COLLISION_ID)
);
insert into CRASH_2NF
	select * from CRASH_1NF
;

create table VEHICLE_2NF (
  VEHICLE_ID INTEGER,
  COLLISION_ID INTEGER, 
  STATE_REGISTRATION TEXT,
  VEHICLE_CATEGORY TEXT,
  VEHICLE_YEAR INTEGER,
  DRIVER_LICENSE_STATUS TEXT,
  DRIVER_LICENSE_JURISDICTION TEXT,
  PRIMARY_CONTRIBUTING_FACTOR TEXT,
  PRIMARY KEY (VEHICLE_ID),
  FOREIGN KEY (COLLISION_ID) REFERENCES CRASH_2NF(COLLISION_ID)
);
insert into VEHICLE_2NF
	select * from VEHICLE_1NF where COLLISION_ID in (select COLLISION_ID from CRASH_2NF)
;

create table PERSON_2NF (
  PERSON_ID INTEGER,
  COLLISION_ID INTEGER,
  PERSON_TYPE TEXT,
  PERSON_ROLE TEXT,
  PERSON_AGE INTEGER,
  PERSON_SEX TEXT,
  PERSON_INJURY TEXT,
  VEHICLE_ID INTEGER,
  SAFETY_EQUIPMENT TEXT,
  PRIMARY KEY (PERSON_ID),
  FOREIGN KEY (COLLISION_ID) REFERENCES CRASH_2NF(COLLISION_ID),
  FOREIGN KEY (VEHICLE_ID) REFERENCES VEHICLE_2NF(VEHICLE_ID)
);
insert into PERSON_2NF
	select * from PERSON_1NF where COLLISION_ID in (select COLLISION_ID from CRASH_2NF) and (VEHICLE_ID is NULL or VEHICLE_ID in (select VEHICLE_ID from VEHICLE_2NF))
;
